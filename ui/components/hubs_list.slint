import { VerticalBox, HorizontalBox, VerticalBox, ScrollView, ListView, Spinner } from "std-widgets.slint";
import { PagedList, Activity } from "common.slint";


export struct HubData {
    id: string,
    title: string,
    description: string,
    image_url: string,
    image: image,
}


export component HubItem inherits Rectangle {
    in-out property <HubData> hub_data;
    callback clicked(HubData);
    height: inner_hl.preferred-height + 15px;

    inner := Rectangle {
        y: 15px;
        height: inner_hl.preferred-height;
        border-width: touch.pressed ? 3px : 2px;
        border-color: touch.pressed ? grey.brighter(0.1) : grey.brighter(0.3);

        background: white;

        animate border-color {
            duration: 200ms;
            easing: ease-in;
        }

        animate border-width {
            duration: 200ms;
            easing: ease-in;
        }

        inner_hl := HorizontalLayout {
            padding: 15px;
            spacing: 15px;

            logo := Image {
                height: 80px;
                width: 80px;
                source: hub_data.image;
            }

            VerticalLayout {
                alignment: start;
                spacing: 10px;

                title := Text {
                    text: root.hub_data.title;

                    color: touch.pressed ? black : black.brighter(0.2);
                    font-size: 20px;
                    font-weight: 600;

                    wrap: word-wrap;
                    overflow: elide;
                }

                descr := Text {
                    vertical-alignment: top;

                    text: root.hub_data.description;
                    color: gray;
                    overflow: elide;
                    wrap: word-wrap;
                    font-size: 16px;
                }
            }

        }

        touch := TouchArea {
            clicked => {
                root.clicked(root.hub_data)
            }
        }
    }
}

export component HubsList inherits Activity {
    in-out property <[HubData]> data;

    callback item-clicked(HubData);

    in-out property <int> current_page <=> inner.current_page;
    in-out property <int> pages_count <=> inner.pages_count;
    in-out property <string> title_text <=> inner.title_text;
    in-out property <bool> is_loading <=> inner.is_loading;

    callback data-requested <=> inner.data-requested;
    callback data-loaded;

    data-loaded => {
        inner.is_loading = false;
        lst.viewport-y = 0;
    }

    public function set_hub_icon(index: int, img: image) {
        data[index].image = img;
    }

    inner := PagedList {
        title_text: "Хабы";

        lst := ScrollView {
            vertical-scrollbar-policy: always-off;
            horizontal-scrollbar-policy: always-off;

            viewport-width: root.width;

            property <length> prev_pos: 0;

            pure function almost_down() -> bool {
                return self.viewport-y - 200px <= -(self.viewport-height - self.height);
            }

            changed viewport-y => {
                if self.viewport-y <= prev_pos - 100px {
                    prev_pos = self.viewport-y;
                    inner.pager_need = false;
                } else if self.viewport-y >= prev_pos + 100px || almost_down() {
                    inner.pager_need = true;
                    prev_pos = self.viewport-y;
                }
            }

            for i in data.length: HubItem {
                hub_data: data[i];
    
                clicked(hub) => {
                    item-clicked(hub)
                }
            }
        }

    }
}
